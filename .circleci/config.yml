version: 2
jobs:
  build:
    machine: true
    steps:
      - checkout
          docker_layer_caching: true
      - run: docker build -t hello-world-ruby .
      - deploy:
          name: Push application Docker image
          environment:
            GITHUB_TEAM_NAME_SLUG: cp-team
            APPLICATON_DEPLOY_NAME: myruby-app
            REPONAME: cp-poornima-dev-module
          command: |
            login="$(AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID_MYRUBYAPP} AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY_MYRUBYAPP} aws ecr get-login --no-include-email)"
            ${login}

            docker tag hello-world-ruby "${ECR_ENDPOINT}/${GITHUB_TEAM_NAME_SLUG}/${REPONAME}:myruby-app-1.0"
            docker push "${ECR_ENDPOINT}/${GITHUB_TEAM_NAME_SLUG}/${REPONAME}:myruby-app-1.0"

            if [ "${CIRCLE_BRANCH}" == "master" ]; then
              docker tag hello-world-ruby "${ECR_ENDPOINT}/${GITHUB_TEAM_NAME_SLUG}/${REPONAME}:myruby-app-latest"
              docker push "${ECR_ENDPOINT}/${GITHUB_TEAM_NAME_SLUG}/${REPONAME}:myruby-app-latest"
            fi
      - run:
          name: Authenticate with cluster
          command: |
            sudo apt-get update && sudo apt-get -y install gettext-base
            curl -LO https://storage.googleapis.com/kubernetes-release/release/v1.11.10/bin/linux/amd64/kubectl
            chmod u+x ./kubectl
            # echo -n ${K8S_CLUSTER_CERT} | base64 -d > ./ca.crt
            # kubectl config set-cluster ${K8S_CLUSTER_NAME} --certificate-authority=./ca.crt --server=https://api.${K8S_CLUSTER_NAME}
            # kubectl config set-credentials circleci-dev --token=${K8S_TOKEN}
            # kubectl config set-context ${K8S_CLUSTER_NAME} --cluster=${K8S_CLUSTER_NAME} --user=circleci-dev --namespace=${K8S_NAMESPACE}
            # kubectl config use-context ${K8S_CLUSTER_NAME}
            # kubectl --namespace=${K8S_NAMESPACE} get pods
      